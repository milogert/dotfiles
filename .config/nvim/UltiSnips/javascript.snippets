snippet test
neato
endsnippet


global !p
def create_pointfree_functions(snip):
  # retrieving singlee line from current string and treat it like tabstops
  # count
  placeholders_amount = int(snip.buffer[snip.line].strip())

  # erase current line
  snip.buffer[snip.line] = ''

  # create anonymous snippet with expected content and number of tabstops
  anon_snippet_body = ' => '.join(
    [ '$' + str(i + 2) for i in range(placeholders_amount) ]
  )

  full_body = 'const $1 = {0} =>\n  $0'.format(anon_snippet_body)
  # expand anonymous snippet
  snip.expand_anon(full_body)
endglobal

post_jump "create_pointfree_functions(snip)"
snippet "(\d+)pff" "n arity point free function" br
`!p snip.rv = match.group(1)`
endsnippet

snippet section
$1: [
  { level: '_default', unit: '$1'$20 },
  { level: 'Recruit', cost: $2, mov: $3, wr: $4, cc: $5, rc: $6, def: $7 },
  { level: 'Veteran', cost: $8, mov: $9, wr: $10, cc: $11, rc: $12, def: $13 },
  { level: 'Elite',   cost: $14, mov: $15, wr: $16, cc: $17, rc: $18, def: $19 },
],
$0
endsnippet
