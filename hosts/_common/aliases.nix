{
  environment.shellAliases = {
    mux = "tmuxinator";

    # ls -> exa
    ls = "exa -G  --color auto --icons -a -s type";
    ll = "exa -l -g --git --color always --icons -a -s type";

    # cat -> bat
    cat = "bat";
    catt = "bat --style=plain --pager=never";

    # Reload profile
    rel = ". ~/.zshrc";

    # Serve current dir
    srv = "python -m SimpleHTTPServer \$\{1:-8000\}";

    #1 = "cd +1";
    #2 = "cd +2";
    #3 = "cd +3";
    #4 = "cd +4";
    #5 = "cd +5";
    #6 = "cd +6";
    #7 = "cd +7";
    #8 = "cd +8";
    #9 = "cd +9";
    _ = "sudo";
    ack = "nocorrect ack";
    #b = "${(z)BROWSER}";
    bower = "noglob bower";
    cd = "nocorrect cd";
    cp = "nocorrect cp -i";
    cpi = "nocorrect cp -i";
    d = "dirs -v";
    df = "df -kh";
    diffu = "diff --unified";
    dk = "docker";
    dkC = "docker container";
    dkCP = "docker container unpause";
    dkCR = "docker container run -it --rm";
    dkCRe = "docker container run -it --rm --entrypoint /bin/bash";
    dkCS = "docker container restart";
    dkCa = "docker container attach";
    dkCcp = "docker container cp";
    dkCd = "docker container diff";
    dkCe = "docker container exec";
    dkCin = "docker container inspect";
    dkCk = "docker container kill";
    dkCl = "docker container logs";
    dkCls = "docker container ls";
    dkCp = "docker container pause";
    dkCpr = "docker container prune";
    dkCr = "docker container run";
    dkCrm = "docker container rm";
    dkCrn = "docker container rename";
    dkCs = "docker container start";
    dkCss = "docker container stats";
    dkCtop = "docker container top";
    dkCup = "docker container update";
    dkCw = "docker container wait";
    dkCx = "docker container stop";
    dkE = "docker exec -it";
    dkI = "docker image";
    dkIb = "docker image build";
    dkIh = "docker image history";
    dkIim = "docker image import";
    dkIin = "docker image inspect";
    dkIls = "docker image ls";
    dkIph = "docker image push";
    dkIpl = "docker image pull";
    dkIpr = "docker image prune";
    dkIrm = "docker image rm";
    dkIsv = "docker image save";
    dkIt = "docker image tag";
    dkK = "docker stack";
    dkKls = "docker stack ls";
    dkKps = "docker stack ps";
    dkKrm = "docker stack rm";
    dkN = "docker network";
    dkNin = "docker network inspect";
    dkNls = "docker network ls";
    dkNpr = "docker network prune";
    dkNrm = "docker network rm";
    dkNs = "docker network connect";
    dkNx = "docker network disconnect";
    dkP = "docker unpause";
    dkR = "docker run -it --rm";
    dkRM = "docker system prune";
    dkRe = "docker run -it --rm --entrypoint /bin/bash";
    dkS = "docker restart";
    dkV = "docker volume";
    dkVin = "docker volume inspect";
    dkVls = "docker volume ls";
    dkVpr = "docker volume prune";
    dkVrm = "docker volume rm";
    dkW = "docker swarm";
    dkY = "docker system";
    dkYdf = "docker system df";
    dkYpr = "docker system prune";
    dka = "docker attach";
    dkb = "docker build";
    dkc = "docker-compose";
    dkcB = "docker-compose build --no-cache";
    dkcP = "docker-compose unpause";
    dkcR = "docker-compose run --rm";
    dkcS = "docker-compose restart";
    dkcU = "docker-compose up -d";
    dkcb = "docker-compose build";
    dkcd = "docker-compose down";
    dkce = "docker-compose exec";
    dkck = "docker-compose kill";
    dkcl = "docker-compose logs";
    dkcls = "docker-compose ps";
    dkcp = "docker-compose pause";
    dkcph = "docker-compose push";
    dkcpl = "docker-compose pull";
    dkcps = "docker-compose ps";
    dkcr = "docker-compose run";
    dkcrm = "docker-compose rm";
    dkcs = "docker-compose start";
    dkcsc = "docker-compose scale";
    dkcu = "docker-compose up";
    dkcv = "docker-compose version";
    dkcx = "docker-compose stop";
    dkd = "docker diff";
    dkdf = "docker system df";
    dke = "docker exec";
    dkh = "docker history";
    dki = "docker images";
    dkim = "docker import";
    dkin = "docker inspect";
    dkk = "docker kill";
    dkl = "docker logs";
    dkli = "docker login";
    dklo = "docker logout";
    dkls = "docker ps";
    dkm = "docker-machine";
    dkmS = "docker-machine restart";
    dkma = "docker-machine active";
    dkmcp = "docker-machine scp";
    dkmin = "docker-machine inspect";
    dkmip = "docker-machine ip";
    dkmk = "docker-machine kill";
    dkmls = "docker-machine ls";
    dkmpr = "docker-machine provision";
    dkmps = "docker-machine ps";
    dkmrg = "docker-machine regenerate-certs";
    dkmrm = "docker-machine rm";
    dkms = "docker-machine start";
    dkmsh = "docker-machine ssh";
    dkmst = "docker-machine status";
    dkmu = "docker-machine url";
    dkmup = "docker-machine upgrade";
    dkmv = "docker-machine version";
    dkmx = "docker-machine stop";
    dkp = "docker pause";
    dkph = "docker push";
    dkpl = "docker pull";
    dkps = "docker ps";
    dkpsa = "docker ps -a";
    dkr = "docker run";
    dkrm = "docker rm";
    dkrmC = "docker rm $(docker ps -qaf status=exited)";
    dkrmI = "docker rmi $(docker images -qf dangling=true)";
    dkrmV = "docker volume rm $(docker volume ls -qf dangling=true)";
    dkrmi = "docker rmi";
    dkrn = "docker rename";
    dks = "docker start";
    dkss = "docker stats";
    dksv = "docker save";
    dkt = "docker tag";
    dktop = "docker top";
    dkup = "docker update";
    dkv = "docker version";
    dkw = "docker wait";
    dkx = "docker stop";
    du = "du -kh";
    #e = "${(z)VISUAL:-${(z)EDITOR}}";
    ebuild = "nocorrect ebuild";
    fc = "noglob fc";
    find = "noglob find";
    ftp = "noglob ftp";
    g = "git";
    gCO = "gCo $(gCl)";
    gCT = "gCt $(gCl)";
    gCa = "git add $(gCl)";
    gCe = "git mergetool $(gCl)";
    gCl = "git --no-pager diff --name-only --diff-filter=U";
    gCo = "git checkout --ours --";
    gCt = "git checkout --theirs --";
    gFb = "git flow bugfix";
    gFbc = "git flow bugfix checkout";
    gFbd = "git flow bugfix diff";
    gFbf = "git flow bugfix finish";
    gFbl = "git flow bugfix list";
    gFbm = "git flow bugfix pull";
    gFbp = "git flow bugfix publish";
    gFbr = "git flow bugfix rebase";
    gFbs = "git flow bugfix start";
    gFbt = "git flow bugfix track";
    gFbx = "git flow bugfix delete";
    gFf = "git flow feature";
    gFfc = "git flow feature checkout";
    gFfd = "git flow feature diff";
    gFff = "git flow feature finish";
    gFfl = "git flow feature list";
    gFfm = "git flow feature pull";
    gFfp = "git flow feature publish";
    gFfr = "git flow feature rebase";
    gFfs = "git flow feature start";
    gFft = "git flow feature track";
    gFfx = "git flow feature delete";
    gFh = "git flow hotfix";
    gFhc = "git flow hotfix checkout";
    gFhd = "git flow hotfix diff";
    gFhf = "git flow hotfix finish";
    gFhl = "git flow hotfix list";
    gFhm = "git flow hotfix pull";
    gFhp = "git flow hotfix publish";
    gFhr = "git flow hotfix rebase";
    gFhs = "git flow hotfix start";
    gFht = "git flow hotfix track";
    gFhx = "git flow hotfix delete";
    gFi = "git flow init";
    gFl = "git flow release";
    gFlc = "git flow release checkout";
    gFld = "git flow release diff";
    gFlf = "git flow release finish";
    gFll = "git flow release list";
    gFlm = "git flow release pull";
    gFlp = "git flow release publish";
    gFlr = "git flow release rebase";
    gFls = "git flow release start";
    gFlt = "git flow release track";
    gFlx = "git flow release delete";
    gFs = "git flow support";
    gFsc = "git flow support checkout";
    gFsd = "git flow support diff";
    gFsf = "git flow support finish";
    gFsl = "git flow support list";
    gFsm = "git flow support pull";
    gFsp = "git flow support publish";
    gFsr = "git flow support rebase";
    gFss = "git flow support start";
    gFst = "git flow support track";
    gFsx = "git flow support delete";
    gR = "git remote";
    gRa = "git remote add";
    gRb = "git-hub-browse";
    gRl = "git remote --verbose";
    gRm = "git remote rename";
    gRp = "git remote prune";
    gRs = "git remote show";
    gRu = "git remote update";
    gRx = "git remote rm";
    gS = "git submodule";
    gSI = "git submodule update --init --recursive";
    gSa = "git submodule add";
    gSf = "git submodule foreach";
    gSi = "git submodule init";
    gSl = "git submodule status";
    gSm = "git-submodule-move";
    gSs = "git submodule sync";
    gSu = "git submodule foreach git pull origin master";
    gSx = "git-submodule-remove";
    gb = "git branch";
    gbD = "git branch --delete --force";
    gbL = "git branch --all --verbose";
    gbM = "git branch --move --force";
    gbR = "git branch --move --force";
    gbS = "git show-branch --all";
    gbV = "git branch --verbose --verbose";
    gbX = "git branch --delete --force";
    gba = "git branch --all --verbose";
    gbc = "git checkout -b";
    gbd = "git branch --delete";
    gbl = "git branch --verbose";
    gbm = "git branch --move";
    gbr = "git branch --move";
    gbs = "git show-branch";
    gbv = "git branch --verbose";
    gbx = "git branch --delete";
    gc = "git commit --verbose";
    gcF = "git commit --verbose --amend";
    gcO = "git checkout --patch";
    gcP = "git cherry-pick --no-commit";
    gcR = "git reset \"HEAD^\"";
    gcS = "git commit -S --verbose";
    gcSF = "git commit -S --verbose --amend";
    gcSa = "git commit -S --verbose --all";
    gcSf = "git commit -S --amend --reuse-message HEAD";
    gcSm = "git commit -S --message";
    gcY = "git cherry -v";
    gca = "git commit --verbose --all";
    gcam = "git commit --all --message";
    gcc = "nocorrect gcc";
    gcf = "git commit --amend --reuse-message HEAD";
    gcl = "git-commit-lost";
    gcm = "git commit --message";
    gco = "git checkout";
    gcp = "git cherry-pick --ff";
    gcr = "git revert";
    gcs = "git show";
    gcsS = "git show --pretty=short --show-signature";
    gcy = "git cherry -v --abbrev";
    gd = "git ls-files";
    gdc = "git ls-files --cached";
    gdi = "git status --porcelain --short --ignored | sed -n \"s/^!! //p\"";
    gdk = "git ls-files --killed";
    gdm = "git ls-files --modified";
    gdu = "git ls-files --other --exclude-standard";
    gdx = "git ls-files --deleted";
    get = "curl --continue-at - --location --progress-bar --remote-name --remote-time";
    gf = "git fetch";
    gfa = "git fetch --all";
    gfc = "git clone";
    gfcr = "git clone --recurse-submodules";
    gfm = "git pull";
    gfr = "git pull --rebase";
    gg = "git grep";
    ggL = "git grep --files-without-matches";
    ggi = "git grep --ignore-case";
    ggl = "git grep --files-with-matches";
    ggv = "git grep --invert-match";
    ggw = "git grep --word-regexp";
    giA = "git add --patch";
    giD = "git diff --no-ext-diff --cached --word-diff";
    giI = "git update-index --no-assume-unchanged";
    giR = "git reset --patch";
    giX = "git rm -rf --cached";
    gia = "git add";
    gid = "git diff --no-ext-diff --cached";
    gii = "git update-index --assume-unchanged";
    gir = "git reset";
    gist = "nocorrect gist";
    giu = "git add --update";
    gix = "git rm -r --cached";
    #gl = "git log --topo-order --pretty=format:\"${_git_log_medium_format}\"";
    glS = "git log --show-signature";
    #glb = "git log --topo-order --pretty=format:\"${_git_log_brief_format}\"";
    glc = "git shortlog --summary --numbered";
    #gld  =  "git log --topo-order --stat --patch --full-diff --pretty=format:\"${_git_log_medium_format}\"";
    #glg = "git log --topo-order --all --graph --pretty=format:\"${_git_log_oneline_format}\"";
    #glo = "git log --topo-order --pretty=format:\"${_git_log_oneline_format}\"";
    globurl = "noglob urlglobber ";
    #gls = "git log --topo-order --stat --pretty=format:\"${_git_log_medium_format}\"";
    gm = "git merge";
    gmC = "git merge --no-commit";
    gmF = "git merge --no-ff";
    gma = "git merge --abort";
    gmt = "git mergetool";
    gp = "git push";
    gpA = "git push --all && git push --tags";
    gpF = "git push --force";
    gpa = "git push --all";
    gpc = "git push --set-upstream origin \"$(git-branch-current 2> /dev/null)\"";
    gpf = "git push --force-with-lease";
    gpp = "git pull origin \"$(git-branch-current 2> /dev/null)\" && git push origin \"$(git-branch-current 2> /dev/null)\"";
    gpt = "git push --tags";
    gr = "git rebase";
    gra = "git rebase --abort";
    grc = "git rebase --continue";
    grep = "nocorrect grep --color=auto";
    gri = "git rebase --interactive";
    grs = "git rebase --skip";
    gs = "git stash";
    gsL ="git-stash-dropped";
    gsS = "git stash save --patch --no-keep-index";
    gsX ="git-stash-clear-interactive";
    gsa = "git stash apply";
    gsd = "git stash show --patch --stat";
    gsl = "git stash list";
    gsp = "git stash pop";
    gsr = "git-stash-recover";
    gss = "git stash save --include-untracked";
    gsw = "git stash save --include-untracked --keep-index";
    gsx="git stash drop";
    gt = "git tag";
    gtl="git tag -l";
    gts = "git tag -s";
    gtv="git verify-tag";
    gwC = "git clean -f";
    gwD="git diff --no-ext-diff --word-diff";
    gwR = "git reset --hard";
    #gwS="git status --ignore-submodules=${_git_status_ignore_submodules}";
    gwX = "git rm -rf";
    gwc="git clean -n";
    gwd = "git diff --no-ext-diff";
    gwr="git reset --soft";
    #gws = "git status --ignore-submodules=${_git_status_ignore_submodules} --short";
    gwx="git rm -r";
    heroku="nocorrect heroku";
    history="noglob history";
    history-stat="history 0 | awk ''{print $2}'' | sort | uniq -c | sort -n -r | head";
    http-serve="python3 -m http.server";
    lc="lt -c";
    lk = "ll -Sr";
    lm="la | \"$PAGER\"";
    ln = "nocorrect ln -i";
    lni="nocorrect ln -i";
    locate="noglob locate";
    lr = "ll -R";
    lt = "ll -tr";
    lu = "lt -u";
    lx = "ll -XB";
    man = "nocorrect man";
    mkdir = "nocorrect mkdir -p";
    mv = "nocorrect mv -i";
    mvi = "nocorrect mv -i";
    mysql = "nocorrect mysql";
    o = "open";
    #p = "${(z)PAGER}";
    pbc = "pbcopy";
    pbp="pbpaste";
    po="popd";
    pu="pushd";
    rake = "noglob rake";
    reset-yubikey = "gpg-connect-agent \"scd serialno\" \"learn --force\" /bye";
    rm = "nocorrect rm -i";
    rmi = "nocorrect rm -i";
    rsync = "noglob rsync";
    run-help="man";
    sa = "alias | grep -i";
    scp = "noglob scp";
    sftp = "noglob sftp";
    sl="ls";
    tmuxa = "tmux  new-session -A";
    tmuxl = "tmux list-sessions";
    topc = "top -o cpu";
    topm = "top -o vsize";
    type = "type -a";
    which-command= "whence";

  };
}
